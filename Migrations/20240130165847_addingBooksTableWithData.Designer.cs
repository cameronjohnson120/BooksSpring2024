// <auto-generated />
using BooksSpring2024.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BooksSpring2024.Migrations
{
    [DbContext(typeof(BooksDBContext))]
    [Migration("20240130165847_addingBooksTableWithData")]
    partial class addingBooksTableWithData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BooksSpring2024.Models.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookID"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookID = 1,
                            Author = "David Grann",
                            BookTitle = "The Wager",
                            CategoryID = 1,
                            Description = "A tale of shipwreck, mutiny, and murder.",
                            Price = 19.99m
                        },
                        new
                        {
                            BookID = 2,
                            Author = "Stephen King",
                            BookTitle = "The Stand",
                            CategoryID = 2,
                            Description = "Stephen King's longest book.",
                            Price = 25.99m
                        },
                        new
                        {
                            BookID = 3,
                            Author = "Jeff Gold",
                            BookTitle = "Future Technology",
                            CategoryID = 3,
                            Description = "About technology.",
                            Price = 30.99m
                        });
                });

            modelBuilder.Entity("BooksSpring2024.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Description = "This is the description for the travel category",
                            Name = "Travel"
                        },
                        new
                        {
                            CategoryID = 2,
                            Description = "This is the description for the fiction category",
                            Name = "Fiction"
                        },
                        new
                        {
                            CategoryID = 3,
                            Description = "This is the description for the technology category",
                            Name = "Technology"
                        });
                });

            modelBuilder.Entity("BooksSpring2024.Models.Book", b =>
                {
                    b.HasOne("BooksSpring2024.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
